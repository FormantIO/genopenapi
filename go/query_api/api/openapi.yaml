openapi: 3.0.0
info:
  title: Formant query-api
  version: 1.12.40
servers:
- url: https://api-dev.formant.io/v1/queries
paths:
  /counts/history:
    post:
      operationId: CountController.history
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountHistoryQuery'
        description: CountHistoryQuery
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountHistory'
      summary: History
      tags:
      - Count
  /counts/active-devices:
    post:
      operationId: CountController.activeDevices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveDevicesQuery'
        description: ActiveDevicesQuery
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidListResponse'
      summary: Active devices
      tags:
      - Count
  /metadata:
    post:
      description: 'Authorized clients: viewer'
      operationId: MetadataController.listMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeFilter'
        description: ScopeFilter
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataListResponse'
      security:
      - bearerAuth: []
      summary: List metadata
      tags:
      - Metadata
  /metadata/stream-names:
    post:
      description: 'Authorized clients: viewer'
      operationId: MetadataController.listStreamNames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeFilter'
        description: ScopeFilter
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringListResponse'
      security:
      - bearerAuth: []
      summary: List stream names
      tags:
      - Metadata
  /metadata/device-ids:
    post:
      description: 'Authorized clients: viewer'
      operationId: MetadataController.listDeviceIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeFilter'
        description: ScopeFilter
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidListResponse'
      security:
      - bearerAuth: []
      summary: List device ids
      tags:
      - Metadata
  /online-devices:
    get:
      description: 'Authorized clients: viewer'
      operationId: OnlineDevicesController.online
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidListResponse'
      security:
      - bearerAuth: []
      summary: Online
      tags:
      - Online Devices
  /presence:
    post:
      description: 'Authorized clients: viewer'
      operationId: PresenceController.count
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntervalQuery'
        description: IntervalQuery
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsoDateListResponse'
      security:
      - bearerAuth: []
      summary: Count
      tags:
      - Presence
  /queries:
    post:
      description: 'Authorized clients: viewer'
      operationId: QueryController.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
        description: Query
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamDataListResponse'
      security:
      - bearerAuth: []
      summary: Query
      tags:
      - Query
  /queries/export-sheet:
    post:
      description: 'Authorized clients: operator'
      operationId: QueryController.exportSheet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelemetryExportSheetRequest'
        description: TelemetryExportSheetRequest
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryExportSheetResult'
      security:
      - bearerAuth: []
      summary: Export sheet
      tags:
      - Query
  /seek:
    post:
      description: 'Authorized clients: viewer'
      operationId: SeekController.seek
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeekQuery'
        description: SeekQuery
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeekResult'
      security:
      - bearerAuth: []
      summary: Seek
      tags:
      - Seek
components:
  schemas:
    UuidListResponse:
      example:
        items:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        items:
          items:
            format: uuid
            type: string
          type: array
      required:
      - items
      type: object
    ActiveDevicesQuery:
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
      properties:
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        organizationId:
          format: uuid
          type: string
      required:
      - end
      - start
      type: object
    CountHistoryEntryCount:
      example:
        "0": 2000-01-23T04:56:07.000+00:00
        "1": 1850900513286151
      properties:
        "0":
          format: date-time
          type: string
        "1":
          format: int64
          maximum: 9007199254740991
          minimum: -9007199254740991
          type: integer
      required:
      - "0"
      - "1"
      type: object
    CountHistoryEntry:
      example:
        counts:
        - "0": 2000-01-23T04:56:07.000+00:00
          "1": 1850900513286151
        - "0": 2000-01-23T04:56:07.000+00:00
          "1": 1850900513286151
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        counts:
          items:
            $ref: '#/components/schemas/CountHistoryEntryCount'
          type: array
      required:
      - counts
      - id
      type: object
    CountHistory:
      example:
        total: -7564555438681791
        counts:
        - counts:
          - "0": 2000-01-23T04:56:07.000+00:00
            "1": 1850900513286151
          - "0": 2000-01-23T04:56:07.000+00:00
            "1": 1850900513286151
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - counts:
          - "0": 2000-01-23T04:56:07.000+00:00
            "1": 1850900513286151
          - "0": 2000-01-23T04:56:07.000+00:00
            "1": 1850900513286151
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        total:
          format: int64
          maximum: 9007199254740991
          minimum: -9007199254740991
          type: integer
        counts:
          items:
            $ref: '#/components/schemas/CountHistoryEntry'
          type: array
      required:
      - counts
      - total
      type: object
    CountHistoryQuery:
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
        type: data-point
      properties:
        type:
          enum:
          - data-point
          - byte
          - asset-byte
          - asset
          - cost
          type: string
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        organizationId:
          format: uuid
          type: string
      required:
      - end
      - start
      - type
      type: object
    ScopeFilter:
      example:
        agentIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deviceIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        types:
        - bitset
        - bitset
        names:
        - names
        - names
        notNames:
        - notNames
        - notNames
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
        tags: ""
      properties:
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        agentIds:
          items:
            format: uuid
            type: string
          type: array
        deviceIds:
          items:
            format: uuid
            type: string
          type: array
        names:
          items:
            type: string
          type: array
        types:
          items:
            enum:
            - bitset
            - localization
            - point cloud
            - location
            - file
            - health
            - transform tree
            - battery
            - video
            - numeric set
            - json
            - image
            - numeric
            - text
            type: string
          type: array
        tags: {}
        notNames:
          items:
            type: string
          type: array
      type: object
    StringListResponse:
      example:
        items:
        - items
        - items
      properties:
        items:
          items:
            type: string
          type: array
      required:
      - items
      type: object
    Metadata:
      example:
        name: name
        type: bitset
        deviceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
          key: tags
      properties:
        deviceId:
          format: uuid
          type: string
        name:
          type: string
        type:
          enum:
          - bitset
          - localization
          - point cloud
          - location
          - file
          - health
          - transform tree
          - battery
          - video
          - numeric set
          - json
          - image
          - numeric
          - text
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      required:
      - deviceId
      - name
      - tags
      - type
      type: object
    MetadataListResponse:
      example:
        items:
        - name: name
          type: bitset
          deviceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
            key: tags
        - name: name
          type: bitset
          deviceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
            key: tags
      properties:
        items:
          items:
            $ref: '#/components/schemas/Metadata'
          type: array
      required:
      - items
      type: object
    Query:
      example:
        agentIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deviceIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        types:
        - bitset
        - bitset
        names:
        - names
        - names
        notNames:
        - notNames
        - notNames
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
        aggregate: year
        tags: ""
      properties:
        aggregate:
          enum:
          - year
          - month
          - week
          - day
          - hour
          - minute
          type: string
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        agentIds:
          items:
            format: uuid
            type: string
          type: array
        deviceIds:
          items:
            format: uuid
            type: string
          type: array
        names:
          items:
            type: string
          type: array
        types:
          items:
            enum:
            - bitset
            - localization
            - point cloud
            - location
            - file
            - health
            - transform tree
            - battery
            - video
            - numeric set
            - json
            - image
            - numeric
            - text
            type: string
          type: array
        tags: {}
        notNames:
          items:
            type: string
          type: array
      required:
      - end
      - start
      type: object
    IntervalQuery:
      example:
        agentIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deviceIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        types:
        - bitset
        - bitset
        names:
        - names
        - names
        notNames:
        - notNames
        - notNames
        start: 2000-01-23T04:56:07.000+00:00
        interval: minute
        end: 2000-01-23T04:56:07.000+00:00
        tags: ""
        aggregate: year
      properties:
        interval:
          enum:
          - minute
          - hour
          - day
          - month
          - year
          type: string
        agentIds:
          items:
            format: uuid
            type: string
          type: array
        deviceIds:
          items:
            format: uuid
            type: string
          type: array
        names:
          items:
            type: string
          type: array
        types:
          items:
            enum:
            - bitset
            - localization
            - point cloud
            - location
            - file
            - health
            - transform tree
            - battery
            - video
            - numeric set
            - json
            - image
            - numeric
            - text
            type: string
          type: array
        tags: {}
        notNames:
          items:
            type: string
          type: array
        aggregate:
          enum:
          - year
          - month
          - week
          - day
          - hour
          - minute
          type: string
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
      required:
      - end
      - interval
      - start
      type: object
    IsoDateListResponse:
      example:
        items:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
      properties:
        items:
          items:
            format: date-time
            type: string
          type: array
      required:
      - items
      type: object
    StreamAggregateData:
      example:
        name: name
        aggregates: ""
        type: bitset
        deviceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
          key: tags
      properties:
        name:
          type: string
        deviceId:
          format: uuid
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        type:
          enum:
          - bitset
          - localization
          - point cloud
          - location
          - file
          - health
          - transform tree
          - battery
          - video
          - numeric set
          - json
          - image
          - numeric
          - text
          type: string
        aggregates: {}
      required:
      - aggregates
      - deviceId
      - name
      - tags
      - type
      type: object
    StreamData:
      example:
        name: name
        type: bitset
        deviceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
          key: tags
        points:
        - '{}'
        - '{}'
      properties:
        name:
          type: string
        deviceId:
          format: uuid
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        type:
          enum:
          - bitset
          - localization
          - point cloud
          - location
          - file
          - health
          - transform tree
          - battery
          - video
          - numeric set
          - json
          - image
          - numeric
          - text
          type: string
        points:
          items:
            $ref: '#/components/schemas/Array'
          type: array
      required:
      - deviceId
      - name
      - points
      - tags
      - type
      type: object
    StreamDataListResponse:
      example:
        aggregates:
        - name: name
          aggregates: ""
          type: bitset
          deviceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
            key: tags
        - name: name
          aggregates: ""
          type: bitset
          deviceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
            key: tags
        items:
        - name: name
          type: bitset
          deviceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
            key: tags
          points:
          - '{}'
          - '{}'
        - name: name
          type: bitset
          deviceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
            key: tags
          points:
          - '{}'
          - '{}'
      properties:
        items:
          items:
            $ref: '#/components/schemas/StreamData'
          type: array
        aggregates:
          items:
            $ref: '#/components/schemas/StreamAggregateData'
          type: array
      required:
      - items
      type: object
    TelemetryExportSheetRequest:
      example:
        query:
          agentIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deviceIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          types:
          - bitset
          - bitset
          names:
          - names
          - names
          notNames:
          - notNames
          - notNames
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
          aggregate: year
          tags: ""
      properties:
        query:
          $ref: '#/components/schemas/Query'
      required:
      - query
      type: object
    TelemetryExportSheetResult:
      example:
        spreadsheetUrl: http://example.com/aeiou
        telemetryNotFound: true
      properties:
        spreadsheetUrl:
          format: url
          type: string
        telemetryNotFound:
          type: boolean
      required:
      - spreadsheetUrl
      - telemetryNotFound
      type: object
    SeekQuery:
      example:
        agentIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deviceIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        types:
        - bitset
        - bitset
        names:
        - names
        - names
        notNames:
        - notNames
        - notNames
        from: 2000-01-23T04:56:07.000+00:00
        direction: next
        tags: ""
      properties:
        direction:
          enum:
          - next
          - previous
          type: string
        from:
          format: date-time
          type: string
        agentIds:
          items:
            format: uuid
            type: string
          type: array
        deviceIds:
          items:
            format: uuid
            type: string
          type: array
        names:
          items:
            type: string
          type: array
        types:
          items:
            enum:
            - bitset
            - localization
            - point cloud
            - location
            - file
            - health
            - transform tree
            - battery
            - video
            - numeric set
            - json
            - image
            - numeric
            - text
            type: string
          type: array
        tags: {}
        notNames:
          items:
            type: string
          type: array
      required:
      - direction
      - from
      type: object
    SeekResult:
      example:
        time: 2000-01-23T04:56:07.000+00:00
      properties:
        time:
          format: date-time
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
